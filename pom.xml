<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>cn.rivamed.framework</groupId>
		<artifactId>rivamed-core-parent</artifactId>
		<version>3.5.4</version>
	</parent>

	<groupId>cn.rivamed</groupId>
	<artifactId>ts</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>


	<name>ts</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>cn.rivamed.RivamedApplication</start-class>
		<!-- Frontend插件版本,用于集成angular服务 -->
		<plugin.frontend.version>0.0.27</plugin.frontend.version>
		<!-- node插件版本,用于集成angular服务 -->
		<system.node.version>v8.11.4</system.node.version>
		<!-- npm插件版本,用于集成angular服务 -->
		<system.npm.version>5.6.0</system.npm.version>
		<mysql.version>8.0.12</mysql.version>
		<spring.data.elasticsearch.version>3.1.0.RELEASE</spring.data.elasticsearch.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>cn.rivamed.framework</groupId>
			<artifactId>rivamed-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>cn.rivamed</groupId>
			<artifactId>rivamed-core-log</artifactId>
			<version>3.5.4</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.47</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
			<version>4.1.16.Final</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>ts</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>
			<!-- springboot maven插件 项目以maven方式进行打包jar/war -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<!-- 默认打包参数,在mvn package之后,再次打包可执行的jar/war,同时保留mvn package生成的jar/war为.origin -->
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version><!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- maven install时跳过单元测试 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>com.github.eirslett</groupId> <artifactId>frontend-maven-plugin</artifactId> 
				<version>${plugin.frontend.version}</version> <configuration> angular 源码根目录 
				<workingDirectory>src/main/angular</workingDirectory> node 国内镜像下载地址 <nodeDownloadRoot>https://npm.taobao.org/mirrors/node/</nodeDownloadRoot> 
				node 版本 <nodeVersion>${system.node.version}</nodeVersion> npm 版本 <npmVersion>${system.npm.version}</npmVersion> 
				代码安装目录 <installDirectory>src/main/node</installDirectory> </configuration> 
				<executions> 安装 node 和 npm <execution> <id>install node and npm</id> <goals> 
				<goal>install-node-and-npm</goal> </goals> <phase>generate-resources</phase> 
				</execution> 安装angular项目依赖 <execution> <id>npm install</id> <goals> <goal>npm</goal> 
				</goals> <configuration> <arguments>install</arguments> <installDirectory>src/main/node</installDirectory> 
				</configuration> </execution> 编译angular源码 <execution> <id>angular cli build</id> 
				<goals> <goal>npm</goal> </goals> <phase>generate-resources</phase> <configuration> 
				<arguments>run build</arguments> </configuration> </execution> </executions> 
				</plugin> -->
		</plugins>
	</build>
</project>
